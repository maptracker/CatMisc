% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CatMisc.R
\name{file.rename2}
\alias{file.rename2}
\title{File Rename II}
\usage{
file.rename2(from, to)
}
\arguments{
\item{from}{Required, the current path to the file}

\item{to}{Required, the path you wish to rename/move the file to}
}
\value{
A single logical value, TRUE for success, FALSE for failure.
}
\description{
Attempts to move/rename files over device boundaries
}
\details{
At least some implementations of R apparently use a low-level
rename library that will refuse to move files across device
boundaries. That is, if the file resides at a path that is on a
device different from the destination path, the rename will fail
with an error message similar to:

\code{
In file.rename(fromPath, toPath) :
  cannot rename file '/mnt/deviceX/foobar.txt' to '/mnt/deviceY/foobar.txt',
  reason 'Invalid cross-device link'
}

Some (many? all?) systems disallow (or simply cannot?) make
\emph{hard links} between devices. However, a move/rename is not a
link (at least in outcome), so the error is a bit perplexing. The
behavior is not limited to R, problems are also seen in Python
where the \code{os.rename} method fails, but \code{shutil.move}
will work (\url{https://stackoverflow.com/a/15300474})

Anyhoo. If renames are failing with \code{cross-device link}
messages, you're probably running into this issue. This method
detects the issue (based on a failure to copy and a grepl to
"Invalid cross.device link"), and attempts to solve the problem by
a copy-then-delete-source mechanism. Doing this task carefully was
more complex than initially anticipated. Source on GitHub has more
commentary (which get removed if you just evaluate
\code{file.rename2}) on why the code is the way it is.
}
\examples{

\donttest{
from <- "/mnt/device1/foo.txt"
to   <- "/mnt/device2/foo.txt"
file.rename(from, to)  # Fails if /mnt/device1 and /mnt/device2 differ
file.rename2(from, to) # Yay! Works.
}

}
\seealso{
\link[base]{file.rename}
}
