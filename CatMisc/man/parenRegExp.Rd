% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CatMisc.R
\name{parenRegExp}
\alias{parenRegExp}
\title{Parenthetical Regular Expression}
\usage{
parenRegExp(RegExp, text, ignore.case = TRUE, unlist = TRUE)
}
\arguments{
\item{RegExp}{The regular expression to use}

\item{text}{The string(s) to test}

\item{ignore.case}{Default TRUE, which will perform matches case
insensitively.}

\item{unlist}{Default TRUE, which will unlist the results. A string
that does not match will return a single \code{NA}. If more
that one capture field is defined, and at least one string
fails to match, then the returned, unlisted vector will be
ragged. If you are matching multiple strings, set unlist=FALSE.}
}
\value{
A character vector representing matched values, or \code{NA} if no
match was found. If unlist is set to \code{FALSE}, then a list of
character vectors, one list element for each value in the submitted
text.
}
\description{
Extract values from parenthetical capture blocks in regular expressions
}
\details{
RegExp in R is not fully fleshed out. This implements a hack
suggested in the internal documentation to allow recovery of text
from multiple parenthetical captures
}
\examples{

codes <- c("Launch code: 0000", "Bro code", "Locker code = 321203")
extractor <- '([A-Z]+).+?(\\\\d+)'
parenRegExp( extractor, codes, unlist = FALSE )

header  <- ">PK139-beta   Alien infection mediator (San Antonio serotype) "
fastaRE <- '^>(\\\\S+)\\\\s*(.*?)\\\\s*$'
parenRegExp( fastaRE, header )

}
